@model TiendaMotores.Models.Direccion

@{
    ViewBag.Title = "Edit";
    if (Session["rol"].ToString() == "Administrador")
    {
        Layout = "~/Views/Shared/_LayoutAdministracion.cshtml";
    }
    else if (Session["rol"].ToString().Equals("Reclutador"))
    {
        Layout = "~/Views/Shared/_LayoutRecursosHumanos.cshtml";

    }
    else if (Session["rol"].ToString().Equals("Empaquetador"))
    {
        Layout = "~/Views/Shared/_LayoutPaqueteria.cshtml";
    }
    else if (Session["rol"].ToString().Equals("Enviador"))
    {
        Layout = "~/Views/Shared/_LayoutEnvios.cshtml";
    }
    else if (Session["rol"].ToString().Equals("Comprador"))
    {
        Layout = "~/Views/Shared/_LayoutCompras.cshtml";

    }
    else if (Session["rol"].ToString().Equals("Vendedor"))
    {
        Layout = "~/Views/Shared/_LayoutVentas.cshtml";
    }
    else if (Session["rol"].ToString().Equals("Productor"))
    {
        Layout = "~/Views/Shared/_LayoutProduccion.cshtml";
    }
    else if (Session["rol"].ToString().Equals("Cliente"))
    {
        Layout = "~/Views/Shared/_LayoutCliente.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<h2>Editar ubicación</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_direccion)

        <div class="form-group">
            @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.municipio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.municipio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.municipio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ciudad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ciudad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ciudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.codigo_postal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.codigo_postal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codigo_postal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.calle_externa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.calle_externa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.calle_externa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.num_calle_externa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_calle_externa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_calle_externa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.calle_interna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.calle_interna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.calle_interna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.num_calle_interna, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_calle_interna, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_calle_interna, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ref1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ref1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ref1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ref2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ref2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ref2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pais, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.pais, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pais, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Actualizar" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    <a class="btn btn-outline-secondary" href="@Url.Action("Index")">
        <i>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
            </svg>
        </i>
        Volver a la lista
    </a>
</div>
